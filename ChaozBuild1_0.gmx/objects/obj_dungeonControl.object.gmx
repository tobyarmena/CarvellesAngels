<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999999999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>minimapw=256
minimaph=256
minimap = surface_create(minimapw,minimaph)



firstTouch=false
activatedoor=false
scr_dungeonGen()
global.currentDungeon = 0

//door checks
global.doorup=false
global.doordown=false
global.doorleft=false
global.doorright=false

/*
Grid Legend:

0 = Empty
1 = Start Room
2 = End Room
3 = Fight Room Type 1
4 = Fight Room Type 2
5 = Fight Room Type 3
6 = Fight Room Type 4
7 = Loot Room
8 = Shop Room
9 = Mega Loot Room
*/

//Dungeon 0
global.room_value[0,1]=room_start_0
global.room_value[0,2]=room_boss_0
global.room_value[0,3]=room_0_4
global.room_value[0,4]=room_0_4
global.room_value[0,5]=room_0_5
global.room_value[0,6]=room_0_6
global.room_value[0,7]=room_0_7
global.room_value[0,8]=room_0_8
global.room_value[0,9]=room_0_shop
global.room_value[0,10]=room_0_10
global.room_value[0,11]=room_0_11
global.room_value[0,12]=room_0_12//left and right
global.room_value[0,13]=room_0_13//start left and right
global.room_value[0,14]=room_0_14//top and bottom
global.room_value[0,15]=room_0_15//top and bottom
global.room_value[0,16]=room_0_16//left and right
global.room_value[0,17]=room_0_17//empty
global.room_value[0,18]=room_0_18//empty
global.room_value[0,19]=room_0_19//empty
global.room_value[0,20]=room_boss_0//BOSS1
global.room_value[0,21]=room_0_21//empty
global.room_value[0,22]=room_0_22//empty
global.room_value[0,23]=room_0_23//empty
global.room_value[0,24]=room_0_24//empty
global.room_value[0,25]=room_0_25//empty
global.room_value[0,26]=room_0_26//empty
global.room_value[0,27]=room_0_shop2// small shop
//global.room_value[0,28]=
//global.room_value[0,29]=
//global.room_value[0,30]=
//global.room_value[0,31]=
//global.room_value[0,32]=
//global.room_value[0,33]=
//global.room_value[0,34]=
//global.room_value[0,35]=
//global.room_value[0,36]=
//global.room_value[0,37]=
//global.room_value[0,38]=
//global.room_value[0,39]=
//global.room_value[0,40]=
//global.room_value[0,41]=
//global.room_value[0,42]=
///global.room_value[0,43]=
//global.room_value[0,44]=
//global.room_value[0,45]=
//global.room_value[0,46]=
//global.room_value[0,47]=
//global.room_value[0,48]=
//global.room_value[0,49]=
//global.room_value[0,50]=
//global.room_value[0,51]=
//global.room_value[0,52]=
//global.room_value[0,53]=
//global.room_value[0,54]=
//global.room_value[0,55]=
//global.room_value[0,56]=
//global.room_value[0,57]=
//global.room_value[0,58]=
//global.room_value[0,59]=
//global.room_value[0,60]=
//global.room_value[0,61]=
//global.room_value[0,62]=
//global.room_value[0,63]=
//global.room_value[0,64]=
//global.room_value[0,65]=
//global.room_value[0,66]=
//global.room_value[0,67]=
//global.room_value[0,68]=
//global.room_value[0,69]=
//global.room_value[0,70]=





//Dungeon 1
global.room_value[1,1] = room_start_1
global.room_value[1,2]=room_boss_1
global.room_value[1,3]=room_1_3
global.room_value[1,4]=room_1_4
global.room_value[1,5]=room_1_5
global.room_value[1,6]=room_1_6
global.room_value[1,7]=room_1_7
global.room_value[1,8]=room_1_8
global.room_value[1,9]=room_1_9
global.room_value[1,10]=room_1_10



nextRoom=0
global.spawn = ""



//Transition Fade Variables
alpha = 0
fade = 1
transitioning = false
transitioning2 = false

//room change exchange variables
xincrease = 0
yincrease = 0
spawn = ""

//Variable for difficulty scaling
global.scale = 1





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_minimap()


playerPos = ds_grid_set(global.playerGrid,global.playerPos_x,global.playerPos_y,1)

up = obj_player.door_Up == true &amp;&amp; activatedoor==false 
down = obj_player.door_Down == true &amp;&amp; activatedoor==false
left = obj_player.door_Left == true &amp;&amp; activatedoor==false
right = obj_player.door_Right == true &amp;&amp; activatedoor==false



//check which doors can open

//up

if abs(ds_grid_get(global.mpath,global.playerPos_x,global.playerPos_y -1)-ds_grid_get(global.mpath,global.playerPos_x,global.playerPos_y))==1 &amp;&amp; ds_grid_get(global.mpath,global.playerPos_x,global.playerPos_y -1) !=0
    {
    global.doorup=true
    }
else if (ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==3)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==6)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==9)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==10)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==1)
    {
    if (ds_grid_get(global.mpath,global.playerPos_x,global.playerPos_y -1) != 0)
        global.doorup=true
    }
else if (ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y-1)==5)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y-1)==8)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y-1)==10)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y-1)==11)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y-1)==1)
    {
    if (ds_grid_get(global.mpath,global.playerPos_x,global.playerPos_y -1) != 0)
        global.doorup=true
    }
else
    {
    global.doorup=false
    }

//down
if abs(ds_grid_get(global.mpath,global.playerPos_x,global.playerPos_y +1)-ds_grid_get(global.mpath,global.playerPos_x,global.playerPos_y))==1 &amp;&amp; ds_grid_get(global.mpath,global.playerPos_x,global.playerPos_y +1) !=0
    {
    global.doordown=true
    }
else if (ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==5)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==8)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==10)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==11)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==1)
    {
    if (ds_grid_get(global.mpath,global.playerPos_x,global.playerPos_y +1) != 0)
        global.doordown=true
    }
else if (ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y+1)==3)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y+1)==6)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y+1)==9)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y+1)==10)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y+1)==1)
    {
    if (ds_grid_get(global.mpath,global.playerPos_x,global.playerPos_y +1) != 0)
        global.doordown=true
    }
else
    {
    global.doordown=false
    }

//left
if abs(ds_grid_get(global.mpath,global.playerPos_x-1,global.playerPos_y)-ds_grid_get(global.mpath,global.playerPos_x,global.playerPos_y))==1 &amp;&amp; ds_grid_get(global.mpath,global.playerPos_x-1,global.playerPos_y) !=0
    {
    global.doorleft=true
    }
else if (ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==2)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==6)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==7)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==8)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==1)
    {
    if (ds_grid_get(global.mpath,global.playerPos_x-1,global.playerPos_y) != 0)
        global.doorleft=true
    }
else if (ds_grid_get(global.mopen,global.playerPos_x-1,global.playerPos_y)==4)||(ds_grid_get(global.mopen,global.playerPos_x-1,global.playerPos_y)==7)||(ds_grid_get(global.mopen,global.playerPos_x-1,global.playerPos_y)==9)||(ds_grid_get(global.mopen,global.playerPos_x-1,global.playerPos_y)==11)||(ds_grid_get(global.mopen,global.playerPos_x-1,global.playerPos_y)==1)
    {
    if (ds_grid_get(global.mpath,global.playerPos_x-1,global.playerPos_y) != 0)
        global.doorleft=true
    }
else
    {
    global.doorleft=false
    }
    
//right
if abs(ds_grid_get(global.mpath,global.playerPos_x+1,global.playerPos_y)-ds_grid_get(global.mpath,global.playerPos_x,global.playerPos_y))==1 &amp;&amp; ds_grid_get(global.mpath,global.playerPos_x+1,global.playerPos_y) !=0
    {
    global.doorright=true
    }
else if (ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==4)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==7)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==9)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==11)||(ds_grid_get(global.mopen,global.playerPos_x,global.playerPos_y)==1)
    {
    if (ds_grid_get(global.mpath,global.playerPos_x+1,global.playerPos_y) != 0)
        global.doorright=true
    }
else if (ds_grid_get(global.mopen,global.playerPos_x+1,global.playerPos_y)==2)||(ds_grid_get(global.mopen,global.playerPos_x+1,global.playerPos_y)==6)||(ds_grid_get(global.mopen,global.playerPos_x+1,global.playerPos_y)==7)||(ds_grid_get(global.mopen,global.playerPos_x+1,global.playerPos_y)==8)||(ds_grid_get(global.mopen,global.playerPos_x+1,global.playerPos_y)==1)
    {
    if (ds_grid_get(global.mpath,global.playerPos_x+1,global.playerPos_y) != 0)
        global.doorright=true
    }
else
    {
    global.doorright=false
    }
    
if (ds_grid_get(global.mpath,global.playerPos_x+1,global.playerPos_y) == 0)
    global.doorright=false
if (ds_grid_get(global.mpath,global.playerPos_x-1,global.playerPos_y) == 0)
    global.doorleft=false
if (ds_grid_get(global.mpath,global.playerPos_x,global.playerPos_y +1) == 0)
    global.doordown=false    
if (ds_grid_get(global.mpath,global.playerPos_x,global.playerPos_y -1) == 0)
    global.doorup=false      
        
      
if global.firstTouch == false
{
//update player position
if global.doorup==true &amp;&amp; up &amp;&amp; !instance_exists(par_enemies)
{
    transitioning = true
    xincrease = 0
    yincrease = -1
    spawn = "down"
    activatedoor=true

}
if global.doordown &amp;&amp; down &amp;&amp; !instance_exists(par_enemies)
{
    transitioning = true
    xincrease = 0
    yincrease = 1
    spawn = "up"
    activatedoor=true
    
}
if global.doorleft &amp;&amp; left &amp;&amp; !instance_exists(par_enemies)
{
    transitioning = true
    xincrease = -1
    yincrease = 0
    spawn = "right"
    activatedoor=true
}
if global.doorright &amp;&amp; right &amp;&amp; !instance_exists(par_enemies)
{
    transitioning = true
    xincrease = 1
    yincrease = 0
    spawn = "left"
    activatedoor=true
  
}
}
//Using the updated information, teleport player to the next room with a fading transition
scr_faderoom(setRoom[global.currentDungeon,global.playerPos_y],xincrease,yincrease,spawn)
scr_fadedungeon()

//Room Check beside
if global.doorright==true or global.roomVisit == true
    ds_grid_set(global.roomBeside,global.playerPos_x+1,global.playerPos_y,1)
else
    ds_grid_set(global.roomBeside,global.playerPos_x+1,global.playerPos_y,0)


if global.doorleft == true or global.roomVisit == true
    ds_grid_set(global.roomBeside,global.playerPos_x-1,global.playerPos_y,1)
else
    ds_grid_set(global.roomBeside,global.playerPos_x-1,global.playerPos_y,0)

if global.doordown == true or global.roomVisit == true
    ds_grid_set(global.roomBeside,global.playerPos_x,global.playerPos_y+1,1)
else
    ds_grid_set(global.roomBeside,global.playerPos_x,global.playerPos_y+1,0)


if global.doorup == true or global.roomVisit == true
    ds_grid_set(global.roomBeside,global.playerPos_x,global.playerPos_y-1,1)
else
    ds_grid_set(global.roomBeside,global.playerPos_x,global.playerPos_y-1,0)


ds_grid_set(global.roomVisit,global.playerPos_x,global.playerPos_y,1)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_message(ds_grid_get(global.mpath,global.playerPos_x,global.playerPos_y+1))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_message(ds_grid_get(global.mpath,global.playerPos_x+1,global.playerPos_y))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_message(ds_grid_get(global.mpath,global.playerPos_x,global.playerPos_y-1))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_message(ds_grid_get(global.mpath,global.playerPos_x-1,global.playerPos_y))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>activatedoor=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_behindDoorWall)
    phy_active = true

activatedoor=false
if visited[global.playerPos_x,global.playerPos_y] == false
{
visited[global.playerPos_x,global.playerPos_y] = true;
global.scale += 0.05
//Calculate how many enemies will spawn
amountspawned = floor(6*global.scale)

//Check if there are enough spawn points to spawn the amount of enemies
if (instance_number(obj_enemyspawn1)&gt;=amountspawned)
    {
    
    
    //loop to create an enemy depending on how many enemies there are
    for(i=1;i&lt;=amountspawned;i=i)
        {
        //choose a random spawner
        randomspawner = irandom(instance_number(obj_enemyspawn1)-1)
        
        //retrieve x position of spawner
        xpos = instance_find(obj_enemyspawn1,randomspawner).x
        //retrieve y position of spaner
        ypos = instance_find(obj_enemyspawn1,randomspawner).y
        
        //choose a random enemy
        
        enemy = choose(obj_doll,obj_doll2,obj_clubclown_mask,obj_clubclown_mask,obj_heartclown_mask,obj_spadeclown_mask,obj_grimreaper)
        
        //check if there isnt already an enemy in the position
        if (instance_position(xpos,ypos,par_enemies)==noone)
            {
            //spawn the enemy
            instance_create(xpos,ypos,enemy)
            i++
            }
        }
    }

//randomly spawn chests
chestnumber = choose(0,0,1,1,1,1,2,2,2,2,2,2,2,2,2,3)
if instance_number(obj_randomchestspawn)&gt;=chestnumber
    {
    if chestnumber&gt;0
    for(i=1;i&lt;=chestnumber;i=i)
        {
        //choose a random spawner
        randomchestspawner = irandom(instance_number(obj_randomchestspawn)-1)
        
        //retrieve x position of spawner
        xxpos = instance_find(obj_randomchestspawn,randomchestspawner).x
        //retrieve y position of spaner
        yypos = instance_find(obj_randomchestspawn,randomchestspawner).y
        
        
        //check if there isnt already an enemy in the position
        if (instance_position(xxpos,yypos,obj_parent_chest)==noone)
            {
            //spawn the enemy
            instance_create(xxpos,yypos,obj_chest)
            i++
            }
        }
    }

}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(32,32,fps)
draw_text(32,128,global.particlelevel)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if keyboard_check(vk_tab)
    {
    scr_dungeonDebug()
    }
else
    {
    draw_surface(minimap,view_xview[0]+view_wview[0]-minimapw,view_yview[0]+view_hview[0]-minimaph)
    }
//Draw Transition
draw_set_color(c_black)
draw_set_alpha(alpha)
draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+view_wview[0],view_yview+view_hview[0],false)

draw_set_alpha(1)

/*//mp_grid_draw(global.grid) 
if global.firstTouch == false
draw_text(view_xview+400,view_yview+400,"false")
*/


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
