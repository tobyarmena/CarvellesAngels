<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>collected = false;
cost=false
//phy_rotation=random(360);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>selected = instance_nearest(obj_player.x,obj_player.y,obj_parent_select);
image_blend = c_white;


if distance_to_object(obj_player)&lt;64
    {
    with(selected)
        {
        //image_blend = c_yellow;
        if keyboard_check_pressed(ord('E'))&amp;&amp; global.full=false
            {
            if cost == false
                collected = true;
            else if cost == true
                {
                if score&gt;price
                    {
                    score -= price;
                    collected = true;
                    }
                }
            }
        }
    }

if collected = true 
    {
    physics_apply_impulse(x,y,obj_player.x-x,obj_player.y-y)
    image_xscale-=0.1
    image_yscale-=0.1
    if image_xscale &lt;= 0
        {
        scr_item_pickup(item_index)
        instance_destroy();
        }
    }
    


   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(selected)
    {
    if distance_to_object(obj_player)&lt;64 &amp;&amp; collected == false
        {
        
        //show_message("work")
        draw_set_halign(fa_center)
        draw_set_valign(fa_top)
        xx = x + 21
        yy = y + 42
        draw_set_font(fnt_item)
        draw_set_colour(c_white)
        draw_text(xx,yy,global.items[item_index,0])
        if cost == true
            {
            draw_text(xx,yy+string_height(global.items[item_index,0]),price)
            }
        xxx=xx-string_width(global.items[item_index,0])/2
        yyy=yy+string_height(global.items[item_index,0])/2
        
        draw_set_colour(c_black)
        draw_set_alpha(0.5)
        if cost == false
            draw_rectangle(xxx,yy,xxx+string_width(global.items[item_index,0]),yy+string_height(global.items[item_index,0]),false)
        else
            draw_rectangle(xxx,yy,xxx+string_width(global.items[item_index,0]),yy+string_height(global.items[item_index,0])+string_height(string(price)),false)
        draw_set_alpha(1)
        draw_set_color(c_white)
        
        draw_sprite_ext(sprite_index,image_index,x-2,y,
        image_xscale,image_yscale,image_angle,c_black,0.5)
        draw_sprite_ext(sprite_index,image_index,x+2,y,image_xscale,
        image_yscale,image_angle,c_black,0.5)
        draw_sprite_ext(sprite_index,image_index,x,y-2,image_xscale,
        image_yscale,image_angle,c_black,0.5)
        draw_sprite_ext(sprite_index,image_index,x,y+2,image_xscale,
        image_yscale,image_angle,c_black,0.5)
        draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,
        image_yscale,image_angle,image_blend,1)
        
        
        }
    }

    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
