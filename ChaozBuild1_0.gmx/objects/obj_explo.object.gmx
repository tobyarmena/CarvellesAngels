<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_explo</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_particles_create(global.explosion1_sys,x,y,global.explosion1_pt,30)
part_particles_create(global.explosion1_sys,x+irandom_range(-30,30),y,global.explosion2_pt,5)

alarm[0] = 10

with(obj_player)
    {
    distance = distance_to_object(other)
    force = (100-distance)*30
    if force&gt;0 &amp;&amp; !collision_line(x,y,other.x,other.y,obj_wall,false,true)&amp;&amp; !collision_line(x,y,other.x,other.y,obj_pushblock128,true,true)
        {
        scr_applyimpulse(point_direction(other.x,other.y,x,y),force)
        lives -= force*0.002    
        }
    }
    
with(par_enemies)
    {
    distance = distance_to_object(other)
    force = (300-distance)*30
    if force&gt;0 &amp;&amp; !collision_line(x,y,other.x,other.y,obj_wall,false,true)&amp;&amp; !collision_line(x,y,other.x,other.y,obj_pushblock128,true,true)
        {
        scr_applyimpulse(point_direction(other.x,other.y,x,y),force)
        hp -= floor(force*0.3)
        }   
    }
    
with(obj_wall_breakable)
    {
    if distance_to_object(other)&lt;300 &amp;&amp;  !collision_line(x,y,other.x,other.y,obj_wall,false,true)&amp;&amp; !collision_line(x,y,other.x,other.y,obj_pushblock128,true,true)
        {
        instance_destroy()
        }
        
    }
    
with(obj_BarrelExplo)
    {
    if distance_to_object(other)&lt;300 &amp;&amp;  !collision_line(x,y,other.x,other.y,obj_wall,true,true) &amp;&amp; !collision_line(x,y,other.x,other.y,obj_pushblock128,true,true)
        {   
        image_blend = c_yellow
        alarm[0]=10
        }
        
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
