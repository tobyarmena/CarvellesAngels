<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1002</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rot=0
alpha=0
touch=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>touch=false
if(global.showinv==true) {
    for(i=0;i&lt;=maxInvSlots;i+=1)
    {
        draw_sprite(global.inventory[i,4],0,global.slot[i].x+11,global.slot[i].y+11)
    }

//draw_sprite(global.inventory[21,4],0,global.slot[21].x,global.slot[21].y)
//draw_sprite(global.inventory[22,4],0,global.slot[22].x,global.slot[22].y)
draw_sprite(global.mouse[4],0,mouse_x-21,mouse_y-21)
}

for(i=0;i&lt;=29;i++)
    {
    with(global.slot[i])
    if (distance_to_point(mouse_x,mouse_y) == 0)
        {
        with(obj_drawitems)
        if global.inventory[i,0] != ""
            {
            touch = true
            var pointx = mouse_x+10;
            var pointy = mouse_y+10;
            rot+=1
            alpha = clamp(alpha+0.05,0,0.6)
             
            draw_set_alpha(alpha)
            draw_rectangle_colour(pointx,pointy,pointx+80+max(string_width(global.inventory[i,3]),string_width(global.inventory[i,0])),pointy+string_height(global.inventory[i,3])+string_height(global.inventory[i,0]),c_gray,c_gray,c_gray,c_gray,false)
            draw_set_alpha(1)
            
            draw_set_font(fnt_inventory)
            draw_set_halign(fa_left);
            draw_set_valign(fa_top);
            
            draw_text_colour(pointx+80, pointy, global.inventory[i,0]+"#"+global.inventory[i,3], c_white,c_white,c_white,c_white,alpha)
            
            
            
            if global.inventory[i,1]!=3
                draw_sprite_ext(global.inventory[i,2],0,pointx+40,pointy+(string_height(global.inventory[i,3])+string_height(global.inventory[i,0]))/2,1,1,rot,c_white,alpha)
            else
                draw_sprite_ext(spr_core1,0,pointx+40,pointy+(string_height(global.inventory[i,3])+string_height(global.inventory[i,0]))/2,1,1,rot,global.inventory[i,2],alpha) 
            }
        else
            {
            alpha = 0
            }
        }
    }
if touch = false
    alpha = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
