<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>posion = false
tick = 10
vtick = 20
canhit=true
ltick = 5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if distance_to_object(obj_explo) &lt;= 200
    {
    physics_apply_impulse(x,y,(x-obj_explo.x)* 2000,(y-obj_explo.y)*2000)
    }*/
//Check if enemy can see player or not
if distance_to_object(obj_player)&lt;500 &amp;&amp; !collision_line(x,y,obj_player.x,obj_player.y,obj_wall,false,true){
    attention = true;
    }
if hp &lt; hpmax{
    attention = true;
    }    

//indicates damage dealt
if hp != hpcheck
    {
    dmg=instance_create(x+random_range(-20,20),y+random_range(-20,20),obj_dmg)
    with(dmg)
        {
        damage = other.hpcheck-other.hp
        color = c_white
        }
    hpcheck = hp
    }
if distance_to_object(obj_gasCan) &lt; 300 
    {
    if posion = false
        posion = true
    else if posion = true &amp;&amp; tick = 0
        {
        scr_deal_damage(10)
        part_particles_create(global.gas_sys,x,y,global.gas_pt,1)
        tick = 10
        }
    }

if posion = true &amp;&amp; tick &gt; 0
tick -= 1

if distance_to_object(obj_missle_ex) &lt; 300
    {
    scr_deal_damage(50);
    }
    
if distance_to_object(obj_companion)&lt;0
    scr_applyforce(point_direction(obj_companion.x,obj_companion.y,x,y),1000)




   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
